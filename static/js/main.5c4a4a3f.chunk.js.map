{"version":3,"sources":["components/FirstTask/FirstTask.module.css","components/SecondTask/SecondTask.module.css","components/common/Button/Button.module.css","components/ThirdTask/ThirdTask.module.css","components/common/Input/InputText.module.css","components/Header/Header.module.css","assets/images/jpg/valakas.jpg","components/FourthTask/FourthTask.module.css","components/common/Checkbox/Checkbox.module.css","components/FirstTask/FirstTask.tsx","redux/secondTaskReducer.ts","components/common/Button/Button.tsx","components/SecondTask/SecondTask.tsx","redux/thirdTaskReducer.ts","components/common/Input/InputText.tsx","components/ThirdTask/ThirdTask.tsx","components/common/Checkbox/Checkbox.tsx","components/FourthTask/FourthTask.tsx","components/PreJuniour/PreJunior.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.ts","redux/firstTaskReducer.ts","redux/headerReducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","FirstTask","user","useSelector","state","firstTaskReducer","users","className","styles","wrap","box","colPic","src","avatar","alt","colMsg","mountMsg","userName","name","msg","boxDate","date","DELETE_TASK","initialState","tasks","id","task","priority","priorityFilters","isActive","secondTaskReducer","action","type","filter","t","taskId","map","Button","value","uuidv1","active","disabled","danger","error","props","btn","length","onClick","SecondTask","useState","filterValue","setFilterValue","dispatch","useDispatch","myTasks","el","myTask","key","onFilterBtnClick","filterButtonIsActiveAC","MyFilterButtons","b","index","col","myTasksList","filterTasksColumn","SET_NAME","names","thirdTaskReducer","InputText","placeholder","onKeyPress","onChange","textInput","textInputFilled","classProps","ThirdTask","setName","onBtnInsertNameClick","setNameAC","alert","namesList","n","inputName","e","charCode","onInputNameChanged","String","currentTarget","namesBox","Checkbox","description","switch","htmlFor","FourthTask","inputContent","checkboxStatus","setState","sytles","checked","PreJunior","Header","menu","headerReducer","menuItems","item","menuItem","to","link","menuBox","App","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,IAAM,uBAAuB,OAAS,0BAA0B,OAAS,0BAA0B,SAAW,4BAA4B,SAAW,4BAA4B,IAAM,uBAAuB,QAAU,6B,kBCAzQD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,IAAM,wBAAwB,YAAc,gCAAgC,OAAS,2BAA2B,kBAAoB,sCAAsC,OAAS,6B,mBCArOD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,uBAAuB,OAAS,uBAAuB,MAAQ,wB,gBCApHD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,IAAM,uBAAuB,UAAY,6BAA6B,aAAe,gCAAgC,SAAW,8B,wBCAjLD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,gBAAkB,qC,gBCA7ED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,2B,qBCD/DD,EAAOC,QAAU,IAA0B,qC,iBCC3CD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,OAAS,2B,6NCgCtDC,EA3BU,WAErB,IACMC,EADQC,aAAY,SAACC,GAAD,OAAwBA,EAAMC,iBAAiBC,SACtD,GAEnB,OACI,yBAAKC,UAAWC,IAAOC,MACnB,yBAAKF,UAAWC,IAAOE,KACnB,yBAAKH,UAAWC,IAAOG,QACnB,yBAAKC,IAAKC,IAAQC,IAAI,YAE1B,yBAAKP,UAAWC,IAAOO,QACnB,yBAAKR,UAAWC,IAAOQ,UACnB,wBAAIT,UAAWC,IAAOS,UAAWf,EAAKgB,MACtC,0BAAMX,UAAWC,IAAOW,KACnBjB,EAAKiB,KAEV,yBAAKZ,UAAWC,IAAOY,SACnB,8BAAOlB,EAAKmB,Y,8BCtBlCC,EAAc,gCAKPC,EAAiC,CAC1CC,MAAO,CACH,CAACC,GAAI,EAAGC,KAAM,OAAQC,SAAU,QAChC,CAACF,GAAI,EAAGC,KAAM,OAAQC,SAAU,OAChC,CAACF,GAAI,EAAGC,KAAM,QAASC,SAAU,UACjC,CAACF,GAAI,EAAGC,KAAM,QAASC,SAAU,QACjC,CAACF,GAAI,EAAGC,KAAM,aAAcC,SAAU,SAE1CC,gBAAiB,CACb,CAACD,SAAU,MAAOE,UAAU,GAC5B,CAACF,SAAU,QACX,CAACA,SAAU,UACX,CAACA,SAAU,SAuBJG,EAnBW,WAA0D,IAAzD1B,EAAwD,uDAA9BmB,EAAcQ,EAAgB,uCAC/E,OAAQA,EAAOC,MACX,KAAKV,EACD,OAAO,eACJlB,EADH,CAEIoB,MAAOpB,EAAMoB,MAAMS,QAAO,SAACC,GAAD,OAAOA,EAAET,KAAOM,EAAOI,YAEzD,IA3BuB,2CA4BnB,OAAO,eACJ/B,EADH,CAEIwB,gBAAiBxB,EAAMwB,gBAAgBQ,KAAI,SAAAF,GAAC,OAAIA,EAAEP,WAAaI,EAAOJ,SAAtB,eAAqCO,EAArC,CAAwCL,UAAU,IAAlD,eAA8DK,EAA9D,CAAiEL,UAAU,SAEnI,QAAS,OAAOzB,I,iCClBTiC,EAbA,SAAC,GAAkJ,IAAD,IAA/IC,aAA+I,MAAvI,cAAuI,MAAxHb,UAAwH,MAAnHc,cAAmH,MAAzGrB,YAAyG,MAAnG,kBAAmG,MAAhFsB,cAAgF,aAAhEC,gBAAgE,aAA9CC,cAA8C,aAA9BC,aAA8B,MAAtB,GAAsB,EAAfC,EAAe,0EAC7J,OAAO,4BAAQZ,KAAK,SACLM,MAAOA,EACPG,SAAUA,EACVlC,UAAS,UAAKC,IAAOqC,IAAZ,YAAmBL,EAAShC,IAAOgC,OAAS,GAA5C,YAAkDE,EAASlC,IAAOkC,OAAS,GAA3E,YAAiFC,EAAMG,OAAS,EAAItC,IAAOmC,MAAQ,IAC5HzB,KAAMA,EACNO,GAAIA,EACJsB,QAASH,EAAMG,SAEzBT,ICiDMU,EAtDI,SAACJ,GAAgB,IAAD,EACKK,mBAAS,OADd,mBAC1BC,EAD0B,KACbC,EADa,KAGzBC,EAAWC,cAEX7B,EAAQrB,aAAY,SAACC,GAAD,OAAyBA,EAAM0B,kBAAkBN,SACrEI,EAAkBzB,aAAY,SAACC,GAAD,OAAyBA,EAAM0B,kBAAkBF,mBASjF0B,EAPgB9B,EAAMS,QAAO,SAACsB,GAC9B,MAAuB,QAAhBL,EACDK,EACAA,EAAG5B,WAAauB,KAIEd,KAAI,SAACF,GACzB,OACI,wBAAI3B,UAAWC,IAAOgD,OAAQC,IAAKvB,EAAET,IACjC,mDAAqBS,EAAEP,SAAvB,OACA,+CAAiBO,EAAER,KAAnB,OACA,kBAAC,EAAD,CAAQY,MAAO,IAAKI,QAAQ,EAAMK,QAAS,kBAAKK,GFWvCjB,EEX8DD,EAAET,GFW1C,CAACO,KAAMV,EAAaa,YAA3C,IAACA,SELnBuB,EAAmB,SAAC/B,GACtBwB,EAAexB,GACfyB,EFI8B,SAACzB,GAAD,MAAgC,CAACK,KArCxC,2CAqCsEL,YEJpFgC,CAAuBhC,KAGhCiC,EAAkBhC,EAAgBQ,KAAI,SAACyB,EAAuBC,GAC9D,OAAOD,EAAEhC,SACH,kBAAC,EAAD,CAAQ4B,IAAKK,EAAOf,QAAS,kBAAMW,EAAiBG,EAAElC,WAAWa,OAAQqB,EAAEhC,SAAUS,MAAOuB,EAAElC,WAC9F,kBAAC,EAAD,CAAQ8B,IAAKK,EAAOf,QAAS,kBAAMW,EAAiBG,EAAElC,WAAWW,MAAOuB,EAAElC,cAKpF,OACI,yBAAKpB,UAAWC,IAAOC,MACnB,yBAAKF,UAAWC,IAAOuD,KACnB,wBAAIxD,UAAWC,IAAOwD,aACjBV,GAEL,yBAAK/C,UAAWC,IAAOyD,mBACnB,uDACCL,M,yBCrDRM,EAAW,4BAalB3C,EAAe,CACjB4C,MAAO,IAsBIC,EAnBU,WAAmF,IAAlFhE,EAAiF,uDAAvDmB,EAAcQ,EAAyC,uCACvG,OAAQA,EAAOC,MACX,KAAKkC,EACD,OAAO,eACA9D,EADP,CAEI+D,MAAM,GAAD,mBAAM/D,EAAM+D,OAAZ,CAAmB,CAACjD,KAAMa,EAAOb,KAAMO,GAAIM,EAAON,QAE/D,QAAS,OAAOrB,I,iBCRTiE,EAdG,SAAC,GAAsG,IAArG/B,EAAoG,EAApGA,MAAoG,IAA7Fb,UAA6F,MAAxFc,cAAwF,MAA9E+B,mBAA8E,MAAhE,gBAAgE,MAA/CpD,YAA+C,MAAxC,oBAAwC,EAAhB0B,EAAgB,mDAEpH,OAAO,2BAAOZ,KAAK,OACLuC,WAAY3B,EAAM2B,WAClBC,SAAU5B,EAAM4B,SAChBtD,KAAMA,EACNoD,YAAaA,EACb/D,UAAS,UAAKC,IAAOiE,UAAZ,YAAyBnC,EAAMQ,QAAUtC,IAAOkE,gBAAhD,YAAmE9B,EAAM+B,YAClFlD,GAAIA,EACJa,MAAOA,KCoDVsC,EAxDG,WAEd,IAAMxB,EAAWC,cAFG,EAICJ,mBAAiB,IAJlB,mBAIhB/B,EAJgB,KAIV2D,EAJU,KAMdV,EAAwChE,aAAY,SAACC,GAAD,OAAyBA,EAAMgE,iBAAiBD,SAOpGW,EAAuB,WAEtB5D,EAAK4B,OAAS,GACbM,EFWa,SAAClC,GAAD,MAAiC,CAACc,KAAMkC,EAAUhD,OAAMO,GAAIc,eEXhEwC,CAAU7D,IACnB8D,MAAM,OAAD,OAAQ9D,EAAR,OAEL8D,MAAM,kBAGVH,EAAQ,KAGNI,EAAYd,EAAM/B,KAAI,SAAA8C,GAAC,OAAK,0BAAMzB,IAAKyB,EAAEzD,IAAKyD,EAAEhE,SAEtD,OAAO,yBAAKX,UAAWC,IAAOC,MACtB,yBAAKF,UAAWC,IAAOuD,KAEnB,kBAAC,EAAD,CAAW7C,KAAM,YACNoB,MAAOpB,EACPoD,YAAa,4EACb7C,GAAI,aACJkD,WAAU,UAAKnE,IAAO2E,WACtBZ,WAAY,SAACa,GAA6D,KAAfA,EAAEC,UAAmBP,KAChFN,SAAU,SAACY,GAAD,OA3BN,SAAClE,GACxB2D,EAAQ3D,GA0BgEoE,CAAmBC,OAAOH,EAAEI,cAAclD,WAG1G,kBAAC,EAAD,CAAQA,MAAO,QACPG,UAAU,EACVvB,KAAM,aACNO,GAAI,UACJsB,QAAS,kBAAI+B,OAGrB,yBAAKvE,UAAWC,IAAOiF,UAClBtB,EAAMrB,OAAS,GAAK,8CAAgBqB,EAAMrB,OAAtB,YAAgCqB,EAAMrB,OAAS,EAAI,QAAS,OAA5D,MACpBmC,M,kCC7CNS,EAPE,SAAC,GAAkH,IAAD,IAAhHC,mBAAgH,MAAlG,sBAAkG,MAA3EzE,YAA2E,MAApE,oBAAoE,MAA/CO,UAA+C,MAA1Cc,cAA0C,EAAhCiC,EAAgC,EAAhCA,SAC3F,OAAO,yBAAKjE,UAAW,cACnB,2BAAOyB,KAAK,WAAWP,GAAIA,EAAIlB,UAAWC,IAAOoF,OAAQ1E,KAAMA,EAAMsD,SAAUA,IAC/E,2BAAOqB,QAASpE,GAAKkE,KC2BlBG,EA7BW,WAAO,IAAD,EAEJ7C,mBAAS,CACzB8C,aAAc,GACdC,gBAAgB,IAJI,mBAEvB5F,EAFuB,KAEhB6F,EAFgB,KAiB5B,OACI,yBAAK1F,UAAW2F,IAAOzF,MACnB,6BACI,kBAAC,EAAD,CAAW6B,MAAOlC,EAAM2F,aAAcvB,SAAU,SAACY,GAbtC,IAAC9C,IAa8FiD,OAAOH,EAAEI,cAAclD,OAZzI2D,EAAS,eAAI7F,EAAL,CAAY2F,aAAczD,SAc9B,kBAAC,EAAD,CAAQA,MAAO,gBACf,kBAAC,EAAD,CAAUkC,SAAU,SAACY,GAZH,IAACe,IAYgEf,EAAEI,cAAcW,QAVjGF,EADNE,EACe,eAAI/F,EAAL,CAAY4F,gBAAgB,IAC3B,eAAI5F,EAAL,CAAY4F,gBAAgB,MASwEG,QAAS/F,EAAM4F,iBAC7H,2BAAI5F,EAAM4F,kBCZPI,EAXG,WACd,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCYGC,EAnBA,WACX,IAEMC,EAFYnG,aAAY,SAACC,GAAD,OAA0BA,EAAMmG,cAAcC,aAErDpE,KAAI,SAAAqE,GACvB,OAEI,wBAAIlG,UAAWC,IAAOkG,UAAU,kBAAC,IAAD,CAASC,GAAE,UAAKF,EAAKG,OAASH,EAAKvF,UAI3E,OACI,6BACI,wBAAIX,UAAWC,IAAOqG,SACjBP,KCFFQ,MAXf,SAAalE,GACT,OACI,yBAAKrC,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOwG,KAAK,aAAaC,OAAQZ,OCC7Ba,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCZA9F,EAAiC,CACnCjB,MAAO,CACH,CAACmB,GAAI,EAAGP,KAAM,QAASC,IAAK,wDAAsBE,KAAM,WAYjDhB,EARiB,WAA0D,IAAzDD,EAAwD,uDAA9BmB,EAAcQ,EAAgB,uCAExE,OADLA,EAAOC,KACK5B,GCClBmB,EAAe,CACjBiF,UAAW,CAAC,CAACtF,KAAM,OAAQ0F,KAAM,KAAM,CAAC1F,KAAM,YAAa0F,KAAM,cAAe,CAAC1F,KAAM,SAAU0F,KAAM,WAAY,CAAC1F,KAAM,UAAW0F,KAAM,cAoBhIL,EAfO,WAAmF,IAAlFnG,EAAiF,uDAAvDmB,EAAcQ,EAAyC,uCAEvF,OADLA,EAAOC,KACK5B,GCjBXkH,GAAcC,YAAgB,CACvChB,gBACAlG,mBACAyB,oBACAsC,qBAOWoD,GAFMC,YAAYH,ICPjCI,IAASV,OACL,kBAAC,IAAMW,WAAP,KACI,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,EAAD,QAGRI,SAASC,eAAe,SJ6HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzF,GACL0F,QAAQ1F,MAAMA,EAAM2F,c","file":"static/js/main.5c4a4a3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"FirstTask_wrap__1_ykZ\",\"box\":\"FirstTask_box__3CHLD\",\"colPic\":\"FirstTask_colPic__4OwPK\",\"colMsg\":\"FirstTask_colMsg__3hiW_\",\"mountMsg\":\"FirstTask_mountMsg__eBmXx\",\"userName\":\"FirstTask_userName__1MqiW\",\"msg\":\"FirstTask_msg__19tMv\",\"boxDate\":\"FirstTask_boxDate__2e196\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SecondTask_wrap__1yRHd\",\"col\":\"SecondTask_col__18dSG\",\"myTasksList\":\"SecondTask_myTasksList__lQDlC\",\"myTask\":\"SecondTask_myTask__1_0WI\",\"filterTasksColumn\":\"SecondTask_filterTasksColumn__1XSq7\",\"active\":\"SecondTask_active__xgr5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__dq_n8\",\"active\":\"Button_active__1Qwdw\",\"danger\":\"Button_danger__1L9_Q\",\"error\":\"Button_error__3UUdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ThirdTask_wrap__3DQwR\",\"col\":\"ThirdTask_col__2sgQB\",\"inputName\":\"ThirdTask_inputName__CNpSY\",\"btnNameEnter\":\"ThirdTask_btnNameEnter__1eQ6v\",\"namesBox\":\"ThirdTask_namesBox__1d0y5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"InputText_textInput__2CECm\",\"textInputFilled\":\"InputText_textInputFilled__2gOf0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBox\":\"Header_menuBox__1MyYb\",\"menuItem\":\"Header_menuItem__8N-3Q\"};","module.exports = __webpack_public_path__ + \"static/media/valakas.a8967f9d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"FourthTask_wrap__2WoI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switchWrap\":\"Checkbox_switchWrap__sIglE\",\"switch\":\"Checkbox_switch__2yMkv\"};","import React from 'react';\r\nimport styles from './FirstTask.module.css';\r\nimport avatar from './../../assets/images/jpg/valakas.jpg';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/store';\r\n\r\nexport const FirstTask = () => {\r\n\r\n    const users = useSelector((state:AppStateType) => state.firstTaskReducer.users)\r\n    const user = users[0];\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <div className={styles.box}>\r\n                <div className={styles.colPic}>\r\n                    <img src={avatar} alt=\"avatar\"/>\r\n                </div>\r\n                <div className={styles.colMsg}>\r\n                    <div className={styles.mountMsg}>\r\n                        <h3 className={styles.userName}>{user.name}</h3>\r\n                        <span className={styles.msg}>\r\n                            {user.msg}\r\n                        </span>\r\n                        <div className={styles.boxDate}>\r\n                            <span>{user.date}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstTask;","import {priorityFiltersType, PriorityType, TasksPriorityType} from '../types/entities';\r\n\r\nconst DELETE_TASK = 'secondTaskReducer/DELETE-TASK';\r\nconst CHANGE_ACTIVE_PRIORITY = 'secondTaskReducer/CHANGE-ACTIVE-PRIORITY';\r\n\r\nexport type InitialStateType = {tasks:TasksPriorityType, priorityFilters: priorityFiltersType}\r\n\r\nexport const initialState: InitialStateType = {\r\n    tasks: [\r\n        {id: 1, task: 'Work', priority: 'High'},\r\n        {id: 2, task: 'News', priority: 'Low'},\r\n        {id: 3, task: 'Games', priority: 'Middle'},\r\n        {id: 4, task: 'React', priority: 'High'},\r\n        {id: 5, task: 'JavaScript', priority: 'High'}\r\n    ],\r\n    priorityFilters: [\r\n        {priority: 'All', isActive: true},\r\n        {priority: 'High'},\r\n        {priority: 'Middle'},\r\n        {priority: 'Low'}\r\n    ],\r\n}\r\n\r\nconst secondTaskReducer = (state: InitialStateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case DELETE_TASK:\r\n            return {\r\n            ...state,\r\n                tasks: state.tasks.filter((t) => t.id !== action.taskId)\r\n            };\r\n        case CHANGE_ACTIVE_PRIORITY:\r\n            return {\r\n            ...state,\r\n                priorityFilters: state.priorityFilters.map(t => t.priority === action.priority ? {...t, isActive: true} : {...t, isActive: false})\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const deleteTaskAC = (taskId:number):{} => ({type: DELETE_TASK, taskId});\r\nexport const filterButtonIsActiveAC = (priority: PriorityType):{} => ({type: CHANGE_ACTIVE_PRIORITY, priority})\r\n\r\nexport default secondTaskReducer;\r\n\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nconst Button = ({ value = 'some button', id = uuidv1(), name= 'one more button', active = false, disabled = false, danger = false, error = '', ...props}:any) => {\r\n    return <button type='button'\r\n                   value={value}\r\n                   disabled={disabled}\r\n                   className={`${styles.btn} ${active ? styles.active : ''} ${danger ? styles.danger : ''} ${error.length > 0 ? styles.error : ''}`}\r\n                   name={name}\r\n                   id={id}\r\n                   onClick={props.onClick}\r\n    >\r\n        {value}\r\n    </button>\r\n}\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\nimport styles from './SecondTask.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {deleteTaskAC, filterButtonIsActiveAC} from '../../redux/secondTaskReducer';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {priorityFilterType, PriorityType, TaskPriorityType} from '../../types/entities';\r\nimport Button from '../common/Button/Button';\r\n\r\nconst SecondTask = (props: any) => {\r\n    let [filterValue, setFilterValue] = useState('All');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const tasks = useSelector((state: AppStateType) => state.secondTaskReducer.tasks)\r\n    const priorityFilters = useSelector((state: AppStateType) => state.secondTaskReducer.priorityFilters)\r\n\r\n    let filteredTasks = tasks.filter((el:TaskPriorityType) => {\r\n        return filterValue === 'All'\r\n            ? el\r\n            : el.priority === filterValue\r\n    })\r\n\r\n\r\n    let myTasks = filteredTasks.map((t: TaskPriorityType) => {\r\n            return (\r\n                <li className={styles.myTask} key={t.id}>\r\n                    <span>{`Priority: '${t.priority}' `}</span>\r\n                    <span>{`Task: '${t.task}' `}</span>\r\n                    <Button value={'x'} danger={true} onClick={()=>(dispatch((deleteTaskAC(t.id))))}/>\r\n                </li>\r\n            )\r\n\r\n    });\r\n\r\n    const onFilterBtnClick = (priority: PriorityType) => {\r\n        setFilterValue(priority)\r\n        dispatch(filterButtonIsActiveAC(priority))\r\n    }\r\n\r\n    let MyFilterButtons = priorityFilters.map((b: priorityFilterType, index: number) => {\r\n        return b.isActive\r\n            ? <Button key={index} onClick={() => onFilterBtnClick(b.priority)} active={b.isActive} value={b.priority}/>\r\n            : <Button key={index} onClick={() => onFilterBtnClick(b.priority)} value={b.priority} />\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <div className={styles.col}>\r\n                <ol className={styles.myTasksList}>\r\n                    {myTasks}\r\n                </ol>\r\n                <div className={styles.filterTasksColumn}>\r\n                    <h5>Filtering by priority: </h5>\r\n                    {MyFilterButtons}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SecondTask;","import { v1 as uuidv1 } from 'uuid';\r\n\r\nexport const SET_NAME = 'thirdTaskReducer/SET-NAME';\r\n\r\ntype ActionsType = setNameACType;\r\n\r\ntype NameType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    names: Array<NameType>\r\n}\r\n\r\nconst initialState = {\r\n    names: []\r\n}\r\n\r\nconst thirdTaskReducer = (state: InitialStateType = initialState, action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_NAME:\r\n            return {\r\n                ...state,\r\n                names: [...state.names, {name: action.name, id: action.id}]\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\ntype setNameACType = {\r\n    id: string\r\n    type: typeof SET_NAME\r\n    name: string\r\n}\r\n\r\nexport const setNameAC = (name: string):setNameACType => ({type: SET_NAME, name, id: uuidv1()});\r\n\r\nexport default thirdTaskReducer;","import React from 'react';\r\nimport styles from './InputText.module.css';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nconst InputText = ({value, id = uuidv1(), placeholder = 'enter a value', name = 'one more textarea', ...props}: any) => {\r\n\r\n    return <input type='text'\r\n                  onKeyPress={props.onKeyPress}\r\n                  onChange={props.onChange}\r\n                  name={name}\r\n                  placeholder={placeholder}\r\n                  className={`${styles.textInput} ${value.length && styles.textInputFilled} ${props.classProps}`}\r\n                  id={id}\r\n                  value={value}\r\n    />\r\n\r\n}\r\n\r\nexport default InputText;","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './ThirdTask.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/store';\r\nimport { setNameAC } from '../../redux/thirdTaskReducer';\r\nimport Button from '../common/Button/Button';\r\nimport InputText from '../common/Input/InputText';\r\n\r\n\r\nconst ThirdTask = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let[name, setName] = useState<string>('');\r\n\r\n    const names: ({name: string, id: string})[] = useSelector((state: AppStateType) => state.thirdTaskReducer.names)\r\n\r\n\r\n    const onInputNameChanged = (name:string):void => {\r\n        setName(name);\r\n    }\r\n\r\n    const onBtnInsertNameClick = ():void => {\r\n\r\n        if(name.length > 0) {\r\n            dispatch(setNameAC(name));\r\n            alert(`Hi, ${name}!`)\r\n        } else {\r\n            alert(`Name is empty!`)\r\n        }\r\n\r\n        setName('')\r\n    }\r\n\r\n    const namesList = names.map(n => (<span key={n.id}>{n.name}</span>));\r\n\r\n    return <div className={styles.wrap}>\r\n            <div className={styles.col}>\r\n\r\n                <InputText name={'inputText'}\r\n                           value={name}\r\n                           placeholder={'Введите текст'}\r\n                           id={'inputText1'}\r\n                           classProps={`${styles.inputName}`}\r\n                           onKeyPress={(e:React.KeyboardEvent<HTMLInputElement>) => { e.charCode === 13 && onBtnInsertNameClick() }}\r\n                           onChange={(e:React.ChangeEvent<HTMLInputElement>) => onInputNameChanged(String(e.currentTarget.value))}\r\n\r\n                />\r\n                <Button value={'Enter'}\r\n                        disabled={false}\r\n                        name={'NamesEnter'}\r\n                        id={'button1'}\r\n                        onClick={()=>onBtnInsertNameClick()}\r\n                />\r\n\r\n                <div className={styles.namesBox}>\r\n                    {names.length > 0 && <span>{`Total ${names.length} ${names.length > 1 ? 'names': 'name'}:`}</span>}\r\n                    {namesList}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n}\r\n\r\nexport default ThirdTask;","import React from 'react';\r\nimport styles from './Checkbox.module.css';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport {checkboxPropsType} from '../../../types/entities';\r\n\r\nconst Checkbox = ({description = 'enter a description', name = 'one more checkbox', id = uuidv1(), onChange}:checkboxPropsType) => {\r\n        return <div className={'switchWrap'}>\r\n            <input type='checkbox' id={id} className={styles.switch} name={name} onChange={onChange}/>\r\n            <label htmlFor={id}>{description}</label>\r\n        </div>\r\n}\r\n\r\nexport default Checkbox;","import React, {useState} from 'react';\r\nimport sytles from './FourthTask.module.css';\r\nimport Checkbox from '../common/Checkbox/Checkbox';\r\nimport Button from '../common/Button/Button';\r\nimport InputText from '../common/Input/InputText';\r\n\r\nexport const FourthTask = () => {\r\n\r\n    let [state, setState] = useState({\r\n            inputContent: '',\r\n            checkboxStatus: false\r\n    });\r\n\r\n    const onInputChanged = (value: string):void => {\r\n        setState({...state, inputContent: value})\r\n    }\r\n\r\n    const onCheckboxChanged = (checked: boolean):void => {\r\n        checked\r\n            ? setState({...state, checkboxStatus: true})\r\n            : setState({...state, checkboxStatus: false})\r\n    }\r\n\r\n    return(\r\n        <div className={sytles.wrap}>\r\n            <div>\r\n                <InputText value={state.inputContent} onChange={(e: React.ChangeEvent<HTMLInputElement>)=>{onInputChanged(String(e.currentTarget.value))}} />\r\n            </div>\r\n            <Button value={'Demo button'} />\r\n            <Checkbox onChange={(e: React.ChangeEvent<HTMLInputElement>) => {onCheckboxChanged(e.currentTarget.checked)}} checked={state.checkboxStatus}/>\r\n            <p>{state.checkboxStatus}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourthTask;","import React from 'react';\r\nimport FirstTask from '../FirstTask/FirstTask';\r\nimport SecondTask from '../SecondTask/SecondTask';\r\nimport ThirdTask from '../ThirdTask/ThirdTask';\r\nimport FourthTask from '../FourthTask/FourthTask';\r\n\r\n\r\nconst PreJunior = () => {\r\n    return(\r\n        <div>\r\n            <FirstTask />\r\n            <SecondTask />\r\n            <ThirdTask />\r\n            <FourthTask />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior;","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/store';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    const menuItems = useSelector((state: AppStateType) => (state.headerReducer.menuItems))\r\n\r\n    const menu = menuItems.map(item => {\r\n        return(\r\n\r\n            <li className={styles.menuItem}><NavLink to={`${item.link}`}>{item.name}</NavLink></li>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <ul className={styles.menuBox}>\r\n                {menu}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport { Route, NavLink, HashRouter } from 'react-router-dom';\r\nimport PreJunior from './components/PreJuniour/PreJunior';\r\nimport Header from './components/Header/Header';\r\n\r\nfunction App(props: any) {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Header />\r\n                <Route path='/prejunior' render={PreJunior}/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {UsersType} from '../types/entities';\r\n\r\ntype InitialStateType = {\r\n    users: UsersType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    users: [\r\n        {id: 1, name: 'Artem', msg: 'npm start нажимал?', date: '20:00'}\r\n    ]\r\n}\r\n\r\nexport const firstTaskReducer = (state: InitialStateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default firstTaskReducer;","import exp from 'constants';\r\n\r\nexport const ADD_MENU_ITEM = 'headerReducer/ADD-MENU-ITEM';\r\n\r\nexport type itemType = {\r\n    name: string\r\n    link: string\r\n}\r\n\r\nexport type menuItemsType = itemType[]\r\n\r\nexport type initialStateType = {\r\n    menuItems: menuItemsType\r\n}\r\n\r\nconst initialState = {\r\n    menuItems: [{name: 'Home', link: '/'}, {name: 'PreJunior', link: '/prejunior'}, {name: 'Junior', link: '/junior'}, {name: 'Junior+', link: '/junior+'}]\r\n}\r\n\r\ntype actionsType = addMenuItemACType;\r\n\r\nconst headerReducer = (state: initialStateType = initialState, action:actionsType): initialStateType => {\r\n    switch (action.type) {\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport type addMenuItemACType = {\r\n    type: typeof ADD_MENU_ITEM\r\n    name: string;\r\n    link: string;\r\n}\r\n\r\nexport const addMenuItemAC = (name: string, link: string):addMenuItemACType => ({type: ADD_MENU_ITEM, name, link});\r\n\r\n\r\nexport default headerReducer;","import {combineReducers, createStore} from 'redux';\r\nimport firstTaskReducer from './firstTaskReducer';\r\nimport secondTaskReducer from './secondTaskReducer';\r\nimport thirdTaskReducer from './thirdTaskReducer';\r\nimport headerReducer from './headerReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    headerReducer,\r\n    firstTaskReducer,\r\n    secondTaskReducer,\r\n    thirdTaskReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}